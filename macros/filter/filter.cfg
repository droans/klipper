[gcode_macro TURN_FILTER_ON]
gcode:
    {% set vars = printer['extended_macro _CONFIG_FILTER'] %}
    
    {% set default_fan_speeds = vars.filter_default_fan_speed %}

    {% set fans = vars.fan_names %}

    {% set fan_speed = params.SPEED | default(default_fan_speeds) | int %}

    {% if fan_speed > 1.0 %}
        {% set fan_speed = fan_speed / 100 %}
    {% endif %}

    {% for fan in fans %}
        SET_FAN_SPEED FAN={fan} SPEED={fan_speed}
    {% endfor %}

    M118 Filter Fans Turned On

[gcode_macro TURN_FILTER_OFF]
gcode:
    {% set fans = printer['extended_macro _CONFIG_FILTER'].fan_names %}

    {% for fan in fans %}
        SET_FAN_SPEED FAN={fan}
    {% endfor %}

    M118 Filter Fans Turned Off

[gcode_macro _FILTER_PRINT_START]
gcode:
    {% set vars = printer['extended_macro _CONFIG_FILTER'].print_filtering %}
    {% if vars.enable %}
        SET_GCODE_VARIABLE MACRO=_FILTER_PRINT_START_TIME_DELAY VARIABLE=delayed VALUE=False
        UPDATE_DELAYED_GCODE ID=_DELAY_FILTER_PRINT_START DURATION=0.5
    {% endif %}

[delayed_gcode _DELAY_FILTER_PRINT_START]
initial_duration: 0
gcode:
    {% set vars = printer['extended_macro _CONFIG_FILTER'].print_filtering %}

    {% set delay_type = vars.print_start_delay %}

    {% if delay_type == 'temp' %}
        _FILTER_PRINT_START_TEMP_DELAY
    {% elif delay_type == 'time' %}
        _FILTER_PRINT_START_TIME_DELAY
    {% endif %}

[gcode_macro _FILTER_PRINT_START_TIME_DELAY]
variable_delayed: False
gcode:
    {% set vars = printer['extended_macro _CONFIG_FILTER'].print_filtering %}

    {% set time_delay = vars.delay_time %}
    
    {% if printer.idle_timeout.state != "Idle" %}
        M118 Printer not idle
        {% if delayed %}
            M118 Delay already occurred, turning on filter
            SET_GCODE_VARIABLE MACRO=_FILTER_PRINT_START_TIME_DELAY VARIABLE=delayed VALUE=True
            TURN_FILTER_ON
        {% else %}
            M118 Delay not yet occurred, waiting {vars.delay_time} seconds.
            UPDATE_DELAYED_GCODE ID=_DELAY_FILTER_PRINT_START DURATION={vars.delay_time}
        {% endif %}
    {% else %}
        M118 Printer idle, no longer worried.
        SET_GCODE_VARIABLE MACRO=_FILTER_PRINT_START_TIME_DELAY VARIABLE=delayed VALUE=True
    {% endif %}

[gcode_macro _FILTER_PRINT_START_TEMP_DELAY]
gcode:
    {% set vars = printer['extended_macro _CONFIG_FILTER'].print_filtering %}

    {% set min_temp = vars.delay_temp | float %}
    {% set current_temp = printer.extruder.temperature | float %}

    {% if printer.idle_timeout.state != "Idle" %}
        {% if current_temp > min_temp %}
            TURN_FILTER_ON
        {% else %}
            UPDATE_DELAYED_GCODE ID=_DELAY_FILTER_PRINT_START DURATION={vars.check_delay}
        {% endif %}
    {% endif %}

[gcode_macro _FILTER_PRINT_END]
gcode:
    {% set vars = printer['extended_macro _CONFIG_FILTER'].print_filtering %}
    {% if vars.enable %}
        SET_GCODE_VARIABLE MACRO=_FILTER_PRINT_END_TIME_DELAY VARIABLE=delayed VALUE=False
        UPDATE_DELAYED_GCODE ID=_DELAY_FILTER_PRINT_START DURATION=0.5
    {% endif %}

[delayed_gcode _DELAY_FILTER_PRINT_END]
initial_duration: 0
gcode:
    {% set vars = printer['extended_macro _CONFIG_FILTER'].print_filtering %}

    {% set delay_type = vars.print_end_delay %}

    {% if delay_type == 'temp' %}
        _FILTER_PRINT_END_TEMP_DELAY
    {% elif delay_type == 'time' %}
        _FILTER_PRINT_END_TIME_DELAY
    {% endif %}

[gcode_macro _FILTER_PRINT_END_TIME_DELAY]
variable_delayed: False
gcode:
    {% set vars = printer['extended_macro _CONFIG_FILTER'].print_filtering %}

    {% set time_delay = vars.delay_time %}
    
    {% if printer.idle_timeout.state != "Idle" %}
        {% if delayed %}
            SET_GCODE_VARIABLE MACRO=_FILTER_PRINT_END_TIME_DELAY VARIABLE=delayed VALUE=True
            TURN_FILTER_OFF
        {% else %}
            UPDATE_DELAYED_GCODE ID=_DELAY_FILTER_PRINT_END DURATION={vars.delay_time}
        {% endif %}
    {% else %}
        SET_GCODE_VARIABLE MACRO=_FILTER_PRINT_END_TIME_DELAY VARIABLE=delayed VALUE=True
    {% endif %}

[gcode_macro _FILTER_PRINT_END_TEMP_DELAY]
gcode:
    {% set vars = printer['extended_macro _CONFIG_FILTER'].print_filtering %}

    {% set min_temp = vars.delay_temp %}
    {% set current_temp = printer.extruder.temperature | float %}

    {% if printer.idle_timeout.state != "Idle" %}
        {% if current_temp < min_temp %}
            TURN_FILTER_OFF
        {% else %}
            UPDATE_DELAYED_GCODE ID=_DELAY_FILTER_PRINT_END DURATION={vars.check_delay}
        {% endif %}
    {% endif %}