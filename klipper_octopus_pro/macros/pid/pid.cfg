[gcode_macro PID]
description: Run a PID tune for the given heater at the given temperature.
gcode:
    {% set known_params = {
            'heater': (
                'h',
                'heater'
            ),
            'temperature': (
                't',
                'temp',
                'temperature'
            ),
            'filament': (
                'f',
                'filament',
                'fil'
            ),
            'help': (
                'h',
                'help'
            )
        }
    %}
    
    {%
        set default_heater = none
    %}

    {% 
        set default_temps = {
        'extruder': 195,
        'heater_bed': 40
        }
    %}


    {% set macro_info = {
            'name': 'PID',
            'desc': (
                'Perform PID tune on a given heater at a given temperature',
            ),
            'm_params': {
                known_params['heater']: {
                    'DESC': (
                        'Heater to perform the PID tune on',
                        'Recognition of heater name is versatile.'
                    ),
                    'DEFAULT': default_heater
                },
                
                known_params['temperature']: {
                    'DESC': (
                        'Temperature to run the PID tune at.',
                        'Overrides filament selection.'
                    ),
                    'DEFAULT': 'Hotend: ' + default_temps['extruder'] | string + ', Bed: ' + default_temps['heater_bed'] | string 
                },
                known_params['filament']: {
                    'DESC': (
                        'Filament preset to run the PID tune at.',
                        'Is overridden by temperature'
                    )
                },
                known_params['help']: {
                    'DESC': 'Returns this help file.'
                }

            }
        }
    %}    

    {%  
        set heaters = {
            'heater_bed': 'heater_bed',
            'bed': 'heater_bed',
            'build_plate': 'heater_bed',
            'heater_build_plate': 'heater_bed',
            'plate': 'heater_bed',
            'heater_plate': 'heater_bed',
            'extruder': 'extruder',
            'heater_extruder': 'extruder',
            'nozzle': 'extruder',
            'heater_nozzle': 'extruder',
            'filament': 'extruder',
            'heater_filament': 'extruder'
        }
    %}



    {% 
        set filament_options = {
            'pla': 200,
            'petg': 225
        }
    %}


    {% 
        set temp_limits = {
            'extruder': {
                'min': 170,
                'max': 275
            },
            'heater_bed': {
                'min': 25,
                'max': 75
            }
        }
    %}

    {% set fail_message = none %}
    {% set failure = false %}

    {% set temperature = none %}
    {% set heater = none %}

    {% if 'HELP' in params %}
        {% set failure = true %}
        {% set macro_name = macro_info['name'] | string %}
        {% set macro_desc = macro_info['desc'] | string %}
        {% set macro_params = macro_info['m_params'] | string %}

        M118 Macro Name is string: {macro_name is string} 
        M118 Macro Description is string: {macro_desc is string}
        M118 Macro Params is string: {macro_params is string}

        _GEN_HELP MACRO_NAME={macro_name} #DESC={macro_desc} MACRO_PARAMS={macro_params}

    {% endif %}

    {% set failure = true %}

    {% set rec_heater = params.HEATER | default(default_heater) %}

    {% if rec_heater is none %}

        {% set fail_message = ('Missing Required Parameter:', '\'heater\'') %}

    {% else %}

        {% if rec_heater in heaters %}
    
            {% set heater = heaters[rec_heater] %}
    
        {% else %}
    
            {% set fail_message = ('Unrecognized Value for Heater: ' + rec_heater) %}
    
        {% endif %}
    
    {% endif %}

    {% if 'TEMP' in params %}

        {% set temperature = params['TEMP'] %}

    {% elif 'FILAMENT' in params %}

        {% set temperature = filament_options[params['FILAMENT']] %}

    {% elif heater is not none %}

        {% set temperature = default_temps[heater] %}

    {% else %}

        {% set fail_message = ('Missing Required Parameter:', 'One of \'Temp\' or \'Filament\'') %}

    {% endif %}

    {% if temperature is not none and heater is not none %}

        {% set min_temp = temp_limits[heater]['min'] %}
        {% set max_temp = temp_limits[heater]['max'] %}

        {% if (temperature | int < min_temp)  %}

            {% set fail_message = (
                    'Temperature below limits for heater ' + heater + '.',
                    'Received temperature ' + temperature | string, 
                    'Min allowed temp: ' + min_temp | string
                )
            %}

        {% elif temperature | int > max_temp %}

            {% set fail_message = (
                    'Temperature above limits for heater ' + heater + '.',
                    'Received temperature ' + temperature | string, 
                    'Max allowed temp: ' + max_temp | string
                )
            %}

        {% endif %}

    {% endif %}

    {% if fail_message is not none %}

        {% for line in fail_message %}

            M118 {line}

        {% endfor %}

    {% elif not failure %}
        M118 Running PID Calibration for {heater} at {temperature}.
        PID_CALIBRATE HEATER={heater} TARGET={temperature}

    {% endif %}