[gcode_macro _GET_RETRACTION_PROPERTIES]
variable_retract_amount: 0
variable_retract_speed: 0
variable_extra_unretract_amount: 0
variable_unretract_speed: 0
gcode:

    ##########################################################################################
    ##########################################################################################
    #############################    Get Retraction Properties     ###########################
    ###########     Gets the retraction properties and saves to GCode variables     ##########
    ##########################################################################################
    ##########################################################################################
    #####################################     Notes:     #####################################
    ##########################################################################################
    ##########     * DEFAULT_(XXX)_(YYYY): If Macro or FW Retract does not exist,   ##########
    ##########       use these defaults instead.                                    ##########
    ##########                                                                      ##########
    ##########     * fw_retract_props_obj: The object to look for the fw retract    ##########
    ##########       dictionary. Usually should be printer.                         ##########
    ##########                                                                      ##########
    ##########     * fw_retract_props_key: The key in that object for fw retraction ##########
    ##########                                                                      ##########
    ##########     * fw_xxxx_xxxx_key: The keys in the dictionary for each item     ##########
    ##########                                                                      ##########
    ##########     * retract_macro: A macro which saves variables for retraction    ##########
    ##########        Should run at the beginning of each print.                    ##########
    ##########                                                                      ##########
    ##########     * macro_xxxx_xxxx_var: The variables saved by the macro for      ##########
    ##########       each retract option.                                           ##########
    ##########                                                                      ##########
    ##########     * macro_name: The name of this macro.                            ##########
    ##########                                                                      ##########
    ##########     * xxxx_xxxx_var: The variable where the option will be saved     ##########
    ##########       for this macro.                                                ##########
    ##########                                                                      ##########
    ##########     * start_macro: Macro with start code. Will be polled if          ##########
    ##########       retract amount/speed is not found.                             ##########
    ##########       The macro will look for variable_retract_amount and            ##########     
    ##########       variable_retract_speed in this macro.                          ##########     
    ##########                                                                      ##########
    ##########################################################################################
    ##########################################################################################

    {% set DEFAULT_RETRACT_AMT = 0.5 %}
    {% set DEFAULT_RETRACT_SPEED = 60 %}
    {% set DEFAULT_UNRETRACT_EXTRA_AMT = 0 %}
    {% set DEFAULT_UNRETRACT_SPEED = 60 %}

    {% set fw_retract_props_obj = printer %}
    {% set fw_retract_props_key = 'firmware_retraction' %}
    
    {% set fw_retract_length_key = 'retract_length' %}
    {% set fw_retract_speed_key = 'retract_speed' %}
    {% set fw_unretract_extra_length_key = 'unretract_extra_length' %}
    {% set fw_unretract_speed_key = 'unretract_speed' %}
    
    {% set retract_macro = 'SET_FILAMENT_PROPERTIES' %}

    {% set macro_retract_amt_var = 'retract_amount' %}
    {% set macro_retract_speed_var = 'retract_speed' %}
    {% set macro_extra_unretract_amt_var = 'extra_unretract_amount' %}
    {% set macro_unretract_speed_var = 'unretract_speed' %}

    {% set macro_name = '_GET_RETRACTION_PROPERTIES' %}
    {% set retract_amt_var = 'retract_amount' %}
    {% set retract_speed_var = 'retract_speed' %}
    {% set extra_unretract_amt_var = 'extra_unretract_amount' %}
    {% set unretract_speed_var = 'unretract_speed' %}
    
    {% if fw_retract_props_key in fw_retract_props_obj %}
        {% set fw = fw_retract_props_obj[fw_retract_props_key] %}
        
        {% if fw_retract_length_key in fw %}
            {% set fw_retract_length = fw[fw_retract_length_key] | float %}
        {% else %}
            {% set fw_retract_length = DEFAULT_RETRACT_AMT | float %}
        {% endif %}

        {% if fw_retract_speed_key in fw %}
            {% set fw_retract_speed = fw[fw_retract_speed_key] | float %}
        {% else %}
            {% set fw_retract_speed = DEFAULT_RETRACT_SPEED | float %}
        {% endif %}

        {% if fw_unretract_extra_length_key in fw %}
            {% set fw_unretract_extra_length = fw[fw_unretract_extra_length_key] | float %}
        {% else %}
            {% set fw_unretract_extra_length = DEFAULT_UNRETRACT_EXTRA_AMT | float %}
        {% endif %}

        {% if fw_unretract_speed_key in fw %}
            {% set fw_unretract_speed = fw[fw_unretract_speed_key] | float %}
        {% else %}
            {% set fw_unretract_speed = DEFAULT_UNRETRACT_SPEED | float %}
        {% endif %}

    {% endif %}

    

    {% if retract_macro == -1 %}
        {% set retract_length = DEFAULT_RETRACT_AMT | float %}
        {% set retract_speed = DEFAULT_RETRACT_SPEED | float %}
        {% set unretract_extra_length = DEFAULT_UNRETRACT_EXTRA_AMT | float %}
        {% set unretract_speed = DEFAULT_UNRETRACT_SPEED | float %}
    {% else %}
        {% set macro = 'gcode_macro ' + retract_macro %}
        {% set m = printer[macro] %}

        {% set retract_length = m[macro_retract_amt_var] | float %}
        {% set retract_speed = m[macro_retract_speed_var] | float %}
        {% set unretract_extra_length = m[macro_extra_unretract_amt_var] | float %}
        {% set unretract_speed = m[macro_unretract_speed_var] | float %}

    {% endif %}


    SET_GCODE_VARIABLE MACRO={macro_name} VARIABLE={retract_amt_var} VALUE={retract_length}
    SET_GCODE_VARIABLE MACRO={macro_name} VARIABLE={retract_speed_var} VALUE={retract_speed}
    SET_GCODE_VARIABLE MACRO={macro_name} VARIABLE={extra_unretract_amt_var} VALUE={unretract_extra_length}
    SET_GCODE_VARIABLE MACRO={macro_name} VARIABLE={unretract_speed_var} VALUE={unretract_speed}



[gcode_macro _CALCULATE_PAUSE_POSITION]
gcode:
    {% set axis_min = params.AXIS_MIN %}
    {% set axis_max = params.AXIS_MAX %}
    {% set cur_pos = params.CUR_POS %}
    {% set offset = params.OFFSET %}
    {% set offset_basis = params.OFFSET_BASIS | int %}
    {% set limit_basis = params.OUTSIDE_LIMIT_BASIS %}
    {% set save_to_macro = params.MACRO_CALLER %}
    {% set save_to_var = params.MACRO_SAVE_VAR %}

    {% if offset_basis == -1 %}
        {% set pos = axis_min + offset %}
    {% elif offset_basis == 0 %}
        {% set pos = axis_max + offset %}
    {% elif offset_basis == 1 %}
        {% set pos = cur_pos + offset %}
    {% endif %}

    {% if pos > axis_max or pos < axis_min %}
        {% if limit_basis == -1 %}
            {% set pos = axis_min %}
        {% elif limit_basis == 0 %}
            {% set pos = cur_pos %}
        {% elif limit_basis == 1 %}
            {% set pos = axis_max %}
        {% elif limit_basis == -11 %}
            {% set pos = axis_min + offset%}
        {% elif limit_basis == 10 %}
            {% set pos = cur_pos + offset %}
        {% elif limit_basis == 11 %}
            {% set pos = axis_max + offset %}
        {% endif %}
    {% endif %}

    ### As a backup, we'll check once again
    ### If greater than max, we'll use min. If less than min, we'll use max
    {% if pos > axis_max %}
        {% set pos = axis_min %}
    {% elif pos < axis_min %}
        {% set pos = axis_max %}
    {% endif %}

    SET_GCODE_VARIABLE MACRO={save_to_macro} VARIABLE={save_to_var} VALUE={pos}

[gcode_macro PAUSE]
variable_x_pos: 0
variable_y_pos: 0
variable_z_pos: 0
description: Pause the current print
rename_existing: BASE_PAUSE
gcode:
    
    ##########################################################################################
    ##########################################################################################
    ##################################     Set Defaults     ##################################
    ####################     Set the default position for the toolhead     ###################
    ##########################################################################################
    ##########################################################################################
    #####################################     Notes:     #####################################
    ##########################################################################################
    ##########     * offset_basis_(x/y/z):                                          ##########
    ###############     * Options:                                             ###############
    ####################     * -1: Offset from Min                        ####################
    ####################     * 0: Offset from Current Position            ####################
    ####################     * 1: Offset from Max                         ####################
    ###############     * Offset calculated by position of item chosen plus offset  ##########
    ##########                                                                      ##########
    ##########     * offset_(x/y/z): The amount to offset to add to the             ##########
    ##########       given basis                                                    ##########
    ##########                                                                      ##########
    ##########     * (x/y/z)_pos_outside_limits:                                    ##########
    ###############     * Options:                                             ###############
    ####################     * -1: Use Min as Offset instead              ####################
    ####################     * 0: Use Current Position as Offset instead  ####################
    ####################     * 1: Use Max as Offset instead               ####################
    ####################     * -11: Use Min plus offset instead           ####################
    ####################     * 10: Use Current pos plus offset instead    ####################
    ####################     * 11: Use Max plus Offset instead            ####################
    ###############     * This should be different than offset_basis           ###############
    ##########                                                                      ##########
    ##########     * retract_amount: Amount of Filament in MM to be retracted       ##########
    ##########                                                                      ##########
    ##########     * retract_speed: Speed to retract filament in MM                 ##########
    ##########                                                                      ##########
    ##########     * pos_calc_macro: Macro which calculates the pause position      ##########
    ##########                                                                      ##########
    ##########     * retract_prop_macro: Macro which will determine the retraction  ##########     
    ##########       properties.                                                    ##########     
    ##########                                                                      ##########
    ##########################################################################################
    ##########################################################################################
    
    
    {% set offset_basis_x = 0 %}
    {% set offset_basis_y = 0 %}
    {% set offset_basis_z = 1 %}

    {% set offset_x = 20 %}
    {% set offset_y = 20 %}
    {% set offset_z = 20 %}

    {% set x_pos_outside_limits = -1 %}
    {% set y_pos_outside_limits = -1 %}
    {% set z_pos_outside_limits = 1 %}

    {% set retract_amount = -0.8 %}
    {% set retract_speed = 60 %}


    ##### Constants
    {% set pos_calc_macro = '_CALCULATE_PAUSE_POSITION' %}
    {% set retract_prop_macro = '_GET_RETRACTION_PROPERTIES' %}


    ##### Get minimums
    {% set x_min = printer.toolhead.axis_minimum.x | float %}
    {% set y_min = printer.toolhead.axis_minimum.y | float %}
    {% set z_min = printer.toolhead.axis_minimum.z | float %}

    ##### Get maximums
    {% set x_max = printer.toolhead.axis_maximum.x | float %}
    {% set y_max = printer.toolhead.axis_maximum.y | float %}
    {% set z_max = printer.toolhead.axis_maximum.z | float %}

    ##### Get Current positions 
    {% set x_cur = printer.toolhead.position.x | float %}
    {% set y_cur = printer.toolhead.position.y | float %}
    {% set z_cur = printer.toolhead.position.z | float %}

    ##### Perform some calculations

    {pos_calc_macro} AXIS_MIN={x_min} AXIS_MAX={x_max} CUR_POS={x_cur} OFFSET={offset_x} OFFSET_BASIS={offset_basis_x} OUTSIDE_LIMIT_BASIS={x_pos_outside_limits} SAVE_TO_MACRO=PAUSE SAVE_TO_VAR=variable_x_pos
    {% set x_pos = printer["gcode_macro PAUSE"].x_pos %}

    {pos_calc_macro} AXIS_MIN={y_min} AXIS_MAX={y_max} CUR_POS={y_cur} OFFSET={offset_y} OFFSET_BASIS={offset_basis_y} OUTSIDE_LIMIT_BASIS={y_pos_outside_limits} SAVE_TO_MACRO=PAUSE SAVE_TO_VAR=variable_y_pos
    {% set y_pos = printer["gcode_macro PAUSE"].y_pos %}

    {pos_calc_macro} AXIS_MIN={z_min} AXIS_MAX={z_max} CUR_POS={z_cur} OFFSET={offset_z} OFFSET_BASIS={offset_basis_z} OUTSIDE_LIMIT_BASIS={z_pos_outside_limits} SAVE_TO_MACRO=PAUSE SAVE_TO_VAR=variable_z_pos
    {% set z_pos = printer["gcode_macro PAUSE"].z_pos %}

    {retract_prop_macro} 
    {% set retract_vars = printer["gcode_macro" + retract_prop_macro] %}
    {% set retract_amt = retract_vars["retract_amount"] | float %}
    {% set retract_speed = retract_vars["retract_speed"] | float %}
    {% set unretract_amt = retract_amt + retract_vars["extra_unretract_amount"] %}
    {% set unretract_speed = retract_vars["unretract_speed"] %}
    
    ##### Allowing custom defined park positions
    ##### WARNING: Does not perform a collision check.

    {% set x = params.X|default(x_pos) | float %}
    {% set y = params.Y|default(y_pos) | float %}
    {% set z = params.Z|default(z_pos)| float %}

    {% set retract_feedrate = retract_speed * 60 %}
    {% set unretract_feedrate = unretract_speed * 60 %}


    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{retract_amt} F{retract_feedrate}
    G1 Z{z_pos}
    G90
    G1 X{x_pos} Y{y_pos} F6000
    M117 Paused
    M118 Pause has been called by the macro.